{"version":3,"sources":["components/NavBar.tsx","components/CustomLink.tsx","components/FavouriteToggle.tsx","services/InMemoryStore.ts","components/BeersListItem.tsx","components/BeersListItemPlaceholder.tsx","api/models/Beer.ts","api/services/ErrorService.ts","api/services/BaseApiService.ts","api/services/BeerService.ts","components/ErrorMessage.tsx","components/Breadcrumbs.tsx","components/BeersList.tsx","components/BeerDetailPlaceholder.tsx","components/BeerDetail.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBar","theme","useTheme","classes","makeStyles","navLink","color","marginLeft","spacing","marginRight","useStyles","AppBar","position","Toolbar","Tooltip","title","aria-label","to","className","HomeRounded","Box","flexGrow","Typography","variant","Favorite","CustomLink","styled","Link","props","FavouriteToggle","isFavourite","onClick","icon","FavoriteBorder","IconButton","aria-checked","favourites","id","this","getIsFavourite","idx","indexOf","splice","beersListItemStyles","createStyles","root","marginBottom","cardActionArea","minHeight","cardMedia","height","width","backgroundSize","favouritePlaceholder","BeersListItem","withStyles","state","InMemoryStore","model","onFavouriteToggled","removeFavourite","addFavourite","setState","imageUrl","CardMedia","image","name","Card","display","flexDirection","xs","md","order","CardActionArea","CardContent","alignItems","textAlign","marginTop","tagline","justifyContent","CardActions","handleClick","bind","React","Component","BeersListItemPlaceholder","m","marginX","Beer","data","firstBrewed","description","abv","ibu","volume","foodPairing","brewersTips","image_url","first_brewed","food_pairing","brewers_tips","HttpError","message","statusCode","Object","setPrototypeOf","prototype","Error","code","badRequest","notFound","internalServerError","unknown","apiBaseUrl","page","pageSize","ids","query","url","length","join","split","fetch","response","ok","ErrorService","handleHttpError","status","json","Array","isArray","map","item","ErrorMessage","style","fontSize","titleAccess","Breadcrumbs","link","palette","text","secondary","textDecoration","currentLink","primary","breadcrumbs","separator","breadcrumb","linkClasses","key","path","BeersList","_isMounted","error","undefined","hasMore","isLoading","beers","handleSearchInputChange","loadBeers","debounce","window","onscroll","onScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","prevProps","prevState","snapshot","showFavourites","a","favouriteIds","getFavourites","BeerService","find","nextBeers","setErrorState","err","findIndex","beer","push","event","target","value","generateBreadcrumbs","loadingItems","Grid","sm","searchForm","noValidate","autoComplete","TextField","placeholder","fullWidth","onChange","InputProps","startAdornment","InputAdornment","SearchRounded","noItemsFound","container","removeBeer","BeerDetailPlaceholder","beerDetailStyles","p","alignSelf","lg","List","list","ListItem","ListItemText","ListItemIcon","margin","padding","BeerDetail","match","params","findById","unit","createMuiTheme","blue","red","typography","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","fontWeight","App","basename","process","ThemeProvider","Container","exact","component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4616e1b5.chunk.js","sourcesContent":["import React from 'react'\nimport {AppBar, Box, makeStyles, Toolbar, Tooltip, Typography, useTheme} from '@material-ui/core';\nimport {Favorite, HomeRounded} from '@material-ui/icons';\nimport {NavLink} from 'react-router-dom';\n\nconst NavBar: React.FC = () => {\n\n    const theme = useTheme();\n    const useStyles = makeStyles({\n        navLink: {\n            color: '#FFFFFF',\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2)\n        }\n    });\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Tooltip title=\"Home\" aria-label=\"Home\">\n                        <NavLink to={\"/\"} aria-label=\"Home\" className={classes.navLink}>\n                            <HomeRounded/>\n                        </NavLink>\n                    </Tooltip>\n                    <Box flexGrow={1}>\n                        <Typography variant={\"h6\"} color=\"inherit\">\n                            Beer App\n                        </Typography>\n                    </Box>\n                    <Tooltip title=\"Favourites\" aria-label=\"Favourites\">\n                        <NavLink to={\"/favourites\"} aria-label=\"Favourites\" className={classes.navLink}>\n                            <Favorite/>\n                        </NavLink>\n                    </Tooltip>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n};\n\nexport default NavBar;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n/**\n * Custom styling wrapper for react-router-dom Link component\n */\nconst CustomLink = styled(Link)`\n    text-decoration: none;\n    color: #000;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;\n\nexport default (props: any) => <CustomLink {...props} />;","import React from 'react';\nimport {IconButton} from '@material-ui/core';\nimport {Favorite, FavoriteBorder} from '@material-ui/icons';\n\ninterface FavouriteToggleProps {\n    onClick: () => any,\n    isFavourite: boolean\n}\n\nconst FavouriteToggle: React.FC<FavouriteToggleProps> = (props: FavouriteToggleProps) => {\n\n    const { isFavourite, onClick } = props;\n\n    const icon = isFavourite ? <Favorite/> : <FavoriteBorder/>;\n\n    return (\n        <IconButton aria-label=\"Favourite\" aria-checked={isFavourite} color=\"secondary\" onClick={() => onClick()}>\n            {icon}\n        </IconButton>\n    )\n};\n\nexport default FavouriteToggle;","\nclass InMemoryStore {\n\n    private favourites: number[] = [];\n\n    addFavourite(id: number) {\n        if (this.getIsFavourite(id)) return;\n\n        // Update state with copy of existing state with item added\n        this.favourites = [...this.favourites, id];\n    }\n\n    removeFavourite(id: number) {\n        if (!this.getIsFavourite(id)) return;\n\n        // Copy favourites array to avoid manipulating state\n        const favourites = [...this.favourites];\n\n        // Remove item from array\n        const idx = favourites.indexOf(id);\n        favourites.splice(idx, 1);\n\n        // Update state\n        this.favourites = [...favourites];\n    }\n\n    getFavourites(): number[] {\n        return [...this.favourites];\n    }\n\n    getIsFavourite(id: number) {\n        return this.favourites.indexOf(id) > -1;\n    }\n\n}\n\nexport default new InMemoryStore();\n","import React from 'react';\nimport {\n    Box,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    CardMedia,\n    createStyles, Theme,\n    Typography,\n    withStyles\n} from '@material-ui/core';\nimport {Beer} from '../api/models/Beer';\nimport CustomLink from './CustomLink';\nimport FavouriteToggle from './FavouriteToggle';\n\nimport InMemoryStore from '../services/InMemoryStore'\nimport {WithStyles} from '@material-ui/core/styles/withStyles';\n\ntype BeersListItemState = {\n    isFavourite: boolean\n}\n\nexport const beersListItemStyles = (theme: Theme) => createStyles({\n    root: {\n        marginBottom: theme.spacing(2)\n    },\n    cardActionArea: {\n        '@media (min-width: 960px)': {\n            minHeight: '160px'\n        }\n    },\n    cardMedia: {\n        height: '100px',\n        width: '100px',\n        backgroundSize: 'contain',\n        '@media (min-width: 960px)': {\n            marginRight: theme.spacing(2)\n        }\n    },\n    favouritePlaceholder: {\n        height: '24px',\n        width: '100%'\n    }\n});\n\ninterface BeersListItemProps extends WithStyles<typeof beersListItemStyles> {\n    model: Beer\n    onFavouriteToggled?: () => any\n}\n\nconst BeersListItem = withStyles(beersListItemStyles)(class extends React.Component<BeersListItemProps, BeersListItemState> {\n\n    constructor(props: BeersListItemProps) {\n        super(props);\n        this.state = {isFavourite: InMemoryStore.getIsFavourite(props.model.id)};\n    }\n\n    handleClick() {\n        const {isFavourite} = this.state;\n        const {model: {id}, onFavouriteToggled} = this.props;\n\n        // Add or remove id from InMemoryStore\n        isFavourite ? InMemoryStore.removeFavourite(id) : InMemoryStore.addFavourite(id);\n\n        // Update state\n        this.setState((state: BeersListItemState) => ({...state, isFavourite: !isFavourite}));\n\n        // Call \"onFavouriteToggled\" prop method if set\n        if (onFavouriteToggled) {\n            onFavouriteToggled();\n        }\n    }\n\n    render() {\n        const {model, classes} = this.props;\n        const {isFavourite} = this.state;\n\n        const cardMedia = model.imageUrl ?\n            <CardMedia image={model.imageUrl} title={model.name}\n                       className={classes.cardMedia}/> :\n            <Box className={classes.cardMedia}/>;\n\n        return (\n            <Card className={classes.root}>\n                <Box display=\"flex\" flexDirection={{xs: 'column', md: 'row'}}>\n                    <Box flexGrow={1} order={{xs: 2, md: 1}}>\n                        <CustomLink to={`/beers/${model.id}`} aria-label=\"Favourites\">\n                            <CardActionArea className={classes.cardActionArea}>\n                                <CardContent>\n                                    <Box display=\"flex\"\n                                         flexDirection={{xs: 'column', md: 'row'}}\n                                         alignItems=\"center\"\n                                    >\n                                        {cardMedia}\n                                        <Box textAlign={{xs: 'center', md: 'left'}} marginTop={{xs: 3, md: 0}}>\n                                            <Typography variant={'h5'}>{model.name}</Typography>\n                                            <Typography variant={'subtitle1'}>{model.tagline}</Typography>\n                                        </Box>\n                                    </Box>\n                                </CardContent>\n                            </CardActionArea>\n                        </CustomLink>\n                    </Box>\n                    <Box order={{xs: 1, md: 2}} display=\"flex\" justifyContent=\"flex-end\">\n                        <CardActions>\n                            <FavouriteToggle onClick={this.handleClick.bind(this)} isFavourite={isFavourite}/>\n                        </CardActions>\n                    </Box>\n                </Box>\n            </Card>\n        )\n    }\n});\n\nexport default BeersListItem;","import React from 'react';\nimport {Box, Card, CardContent, makeStyles} from '@material-ui/core';\nimport './Placeholder.scss';\nimport {beersListItemStyles} from './BeersListItem';\n\nconst BeersListItemPlaceholder: React.FC = () => {\n\n    const useStyles = makeStyles(beersListItemStyles);\n\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <Box className={classes.cardActionArea}>\n                <CardContent>\n                    <Box display=\"flex\"\n                         flexDirection={{xs: 'column', md: 'row'}}\n                         alignItems=\"center\"\n                    >\n                        <Box display={{md: 'none'}} className={classes.favouritePlaceholder} />\n                        <Box marginRight={2} className={`${classes.cardMedia} placeholder`}/>\n                        <Box marginTop={{xs: 3, md: 0}}>\n                            <Box m={2} marginX={{xs: 'auto'}} marginLeft={{md: 2}} className=\"placeholder h5\"/>\n                            <Box m={2} className=\"placeholder subtitle2\"/>\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Box>\n        </Card>\n    )\n};\n\nexport default BeersListItemPlaceholder;","export class Beer {\n\n    id!: number;\n    name!: string;\n    tagline!: string;\n    imageUrl!: string;\n    firstBrewed!: string;\n    description!: string;\n    abv!: number;\n    ibu!: number;\n    volume!: BeerVolume;\n    foodPairing!: string[];\n    brewersTips!: string;\n\n    constructor(data: any) {\n        this.id = data.id;\n        this.name = data.name;\n        this.tagline = data.tagline;\n        this.imageUrl = data.image_url;\n        this.firstBrewed = data.first_brewed;\n        this.description = data.description;\n        this.abv = data.abv;\n        this.ibu = data.ibu;\n        this.volume = data.volume;\n        this.foodPairing = data.food_pairing;\n        this.brewersTips = data.brewers_tips;\n    }\n\n}\n\nexport interface BeerVolume {\n    value: number,\n    unit: string\n}\n","export class HttpError extends Error {\n    statusCode?: number;\n    constructor(message: string, statusCode?: number) {\n        super(message);\n\n        // Set the prototype explicitly for performing instanceof checks\n        Object.setPrototypeOf(this, HttpError.prototype);\n\n        this.statusCode = statusCode;\n    }\n}\n\nexport class ErrorService {\n\n    handleHttpError(code?: number) {\n        switch(code) {\n            case 400:\n                return this.badRequest();\n            case 404:\n                return this.notFound();\n            case 500:\n                return this.internalServerError();\n            default:\n                return this.unknown();\n        }\n    }\n\n    private badRequest() {\n        throw new HttpError('Bad request', 400);\n    }\n\n    private notFound() {\n        throw new HttpError('Not found', 404);\n    }\n\n    private internalServerError() {\n        throw new HttpError('Internal server error', 500);\n    }\n\n    private unknown() {\n        throw new HttpError('Unknown HTTP error');\n    }\n\n}\n\nexport default new ErrorService();","export const apiBaseUrl = 'https://api.punkapi.com/v2';\n\nexport interface BaseApiService<T> {\n    find: () => Promise<T[]>,\n    findById: (id: number) => Promise<T | undefined>\n}","import {Beer} from '../models/Beer';\nimport ErrorService from './ErrorService';\nimport {apiBaseUrl, BaseApiService} from './BaseApiService';\n\nexport class BeerService implements BaseApiService<Beer> {\n\n    async find(page: number = 1, pageSize: number = 20, ids?: number[], query?: string): Promise<Beer[]> {\n\n        let url = `${apiBaseUrl}/beers/?page=${page}&per_page=${pageSize}`;\n\n        if (ids && ids.length) {\n            url += `&ids=${ids.join('|')}`;\n        }\n\n        if (query && query.length) {\n            query = query.split(' ').join('_');\n            url += `&beer_name=${query}`;\n        }\n\n        const response: Response = await fetch(url);\n\n        if (!(response && response.ok)) {\n            ErrorService.handleHttpError(response.status);\n        }\n\n        const json = await response.json();\n\n        if (!Array.isArray(json)) {\n            throw new Error(`Unexpected return type: ${typeof json}`);\n        }\n\n        return json.map((item: any) => new Beer(item));\n    }\n\n    async findById(id: number): Promise<Beer | undefined> {\n\n        const response: Response = await fetch(`${apiBaseUrl}/beers/${id}`);\n\n        if (!(response && response.ok)) {\n            ErrorService.handleHttpError(response.status);\n        }\n\n        const json = await response.json();\n\n        if (!Array.isArray(json) && json.length === 1) {\n            throw new Error(`Unexpected return type: ${typeof json}`);\n        }\n\n        return new Beer(json[0]);\n    }\n}\n\nexport default new BeerService();","import {Box, Card, CardContent, makeStyles, Typography, useTheme} from '@material-ui/core';\nimport React from 'react';\nimport WarningRounded from '@material-ui/icons/WarningRounded';\n\nexport interface ErrorMessageProps {\n    message?: string | any[]\n}\n\nconst ErrorMessage: React.FC<ErrorMessageProps> = (props: ErrorMessageProps) => {\n\n    const theme = useTheme();\n    const useStyles = makeStyles({\n       root: {\n           marginBottom: theme.spacing(2)\n       }\n    });\n    const classes = useStyles();\n\n    const message = props.message || 'Oops, something went wrong!';\n\n    return (\n            <Card className={classes.root}>\n                <CardContent>\n                    <Box display=\"flex\" m={2} flexDirection={{xs: 'column', md: 'row'}} alignItems=\"center\">\n                        <WarningRounded color=\"error\" style={{fontSize: 100}} titleAccess=\"Warning\"/>\n                        <Box marginLeft={{md: 4}}>\n                            <Typography variant={'h6'}>{message}</Typography>\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Card>\n    );\n};\n\nexport default ErrorMessage;","import React from 'react';\nimport {Breadcrumbs as MUIBreadcrumbs, makeStyles, useTheme} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport CustomLink from './CustomLink';\n\nexport interface Breadcrumb {\n    path: string,\n    title: string\n}\n\ninterface BreadcrumbsProps {\n    breadcrumbs: Breadcrumb[]\n}\n\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = (props: BreadcrumbsProps) => {\n\n    const theme = useTheme();\n    const useStyles = makeStyles({\n        root: {\n            marginBottom: theme.spacing(4),\n        },\n        link: {\n            color: theme.palette.text.secondary,\n            textDecoration: 'none',\n            '&:hover': {\n                textDecoration: 'underline'\n            }\n        },\n        currentLink: {\n            color: theme.palette.text.primary,\n            textDecoration: 'none'\n        }\n    });\n\n    const {breadcrumbs} = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <MUIBreadcrumbs separator={<NavigateNextIcon fontSize=\"small\"/>} aria-label=\"breadcrumb\">\n                {breadcrumbs.map((breadcrumb, idx) => {\n                    const linkClasses = idx === breadcrumbs.length - 1 ? classes.currentLink : classes.link;\n                    return (\n                        <CustomLink key={idx} to={breadcrumb.path} aria-label={breadcrumb.title}\n                                    className={linkClasses}>{breadcrumb.title}</CustomLink>\n                    )\n                })\n                }\n            </MUIBreadcrumbs>\n        </div>\n    )\n\n};\n\nexport default Breadcrumbs;","import React from 'react';\nimport {Box, Grid, InputAdornment, TextField, Typography} from '@material-ui/core';\nimport {Beer} from '../api/models/Beer';\nimport BeersListItem from './BeersListItem';\nimport debounce from 'lodash.debounce';\nimport BeersListItemPlaceholder from './BeersListItemPlaceholder';\nimport BeerService from '../api/services/BeerService';\nimport ErrorMessage from './ErrorMessage';\nimport InMemoryStore from '../services/InMemoryStore';\nimport {Link} from 'react-router-dom';\nimport Breadcrumbs, {Breadcrumb} from './Breadcrumbs';\nimport {SearchRounded} from '@material-ui/icons';\n\ninterface BeersListState {\n    error?: string\n    hasMore: boolean\n    isLoading: boolean\n    page: number\n    pageSize: number\n    beers: Beer[]\n    query: string\n}\n\ninterface BeersListProps {\n    showFavourites?: boolean\n}\n\nclass BeersList extends React.Component<BeersListProps, BeersListState> {\n\n    // Track mounted state to avoid attempting to set state after component is unmounted\n    private _isMounted: boolean;\n\n    constructor(props: BeersListProps) {\n        super(props);\n\n        this._isMounted = false;\n\n        this.state = {\n            error: undefined,\n            hasMore: true,\n            isLoading: true,\n            page: 1,\n            pageSize: 20,\n            beers: [],\n            query: ''\n        };\n\n        this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\n\n        // Add debounce to loadBeers to avoid calling api too frequently when search input is changed\n        this.loadBeers = debounce(this.loadBeers.bind(this), 500);\n\n        // Bind to on scroll event for infinite scroll\n        window.onscroll = debounce((this.onScroll.bind(this)), 100);\n    }\n\n    onScroll() {\n        const {\n            loadBeers,\n            state: {\n                error,\n                isLoading,\n                hasMore,\n            },\n        } = this;\n\n        // Return early if there is an error, loading is in progress or there are no more items\n        if (error || isLoading || !hasMore) return;\n\n        // If scroll is in bottom 100px of page, load more beers\n        if (window.innerHeight + document.documentElement.scrollTop > document.documentElement.offsetHeight - 100) {\n            // Increment page number\n            this._isMounted && this.setState(\n                (state: BeersListState) => ({...state, page: state.page + 1, isLoading: true}),\n                () => loadBeers.bind(this)()\n            );\n        }\n    }\n\n    componentDidMount(): void {\n        this._isMounted = true;\n        this.loadBeers();\n    }\n\n    componentDidUpdate(prevProps: Readonly<BeersListProps>, prevState: Readonly<BeersListState>, snapshot?: any): void {\n        // Reset state and reload beers when \"showFavourites\" prop or \"query\" state changes\n        if (prevProps.showFavourites !== this.props.showFavourites || prevState.query !== this.state.query) {\n            this.setState((state: BeersListState) => ({\n                ...state,\n                beers: [],\n                page: 1,\n                isLoading: true\n            }), () => this.loadBeers());\n        }\n    }\n\n    loadBeers() {\n\n        this._isMounted && this.setState({...this.state, isLoading: true}, async () => {\n\n            const {page, pageSize, beers, query} = this.state;\n            const {showFavourites} = this.props;\n\n            // If \"showFavourites\" is set, only load beers in favourites state array\n            const favouriteIds = showFavourites ? InMemoryStore.getFavourites() : undefined;\n\n            // If \"showFavourites\" is set but there are no ids in the InMemoryStore, set state with empty beers array\n            // and return before attempting to fetch\n            if (showFavourites && !(favouriteIds && favouriteIds.length)) {\n                this.setState((state: BeersListState) => ({...state, isLoading: false, beers: []}));\n                return;\n            }\n\n            // Fetch beers and update beers state or set error\n            try {\n\n                const nextBeers = await BeerService.find(page, pageSize, favouriteIds, query);\n\n                // If the number of items requested was returned, we assume there are more\n                const hasMore = nextBeers.length === pageSize;\n\n                this._isMounted && this.setState((state: BeersListState) => ({\n                    ...state,\n                    isLoading: false,\n                    hasMore,\n                    beers: [...beers, ...nextBeers] // Merge new items into the existing beers array\n                }));\n\n            } catch (err) {\n                this.setErrorState(err)\n            }\n        });\n    }\n\n    setErrorState(err: Error) {\n        const message = 'Oops, something went wrong! Failed to load beers.';\n        this._isMounted && this.setState((state: BeersListState) => ({...state, error: message}));\n    }\n\n    componentWillUnmount(): void {\n        this._isMounted = false;\n    }\n\n    removeBeer(id: number) {\n\n        // Remove beer from beers array on favourites view\n\n        if (!this.props.showFavourites) return;\n\n        this.setState((state: BeersListState) => {\n            const idx = state.beers.findIndex(beer => beer.id === id);\n            const beers = [...state.beers];\n            beers.splice(idx, 1);\n            return {...state, beers};\n        });\n    }\n\n    generateBreadcrumbs(): Breadcrumb[] {\n        const breadcrumbs = [{path: '/', title: 'Home'}];\n        if (this.props.showFavourites) {\n            breadcrumbs.push({path: '/favourites', title: 'Favourites'})\n        }\n        return breadcrumbs;\n    }\n\n    handleSearchInputChange(event: any) {\n        this.setState({query: event.target.value, isLoading: true});\n    }\n\n    render() {\n        const {beers, isLoading, error} = this.state;\n        const {showFavourites} = this.props;\n\n        const breadcrumbs = <Breadcrumbs breadcrumbs={this.generateBreadcrumbs()}/>;\n\n        // Display error message if \"error\" is set\n        if (error) return <div>{breadcrumbs}<ErrorMessage message={error}/></div>;\n\n        // Generate placeholder items if \"isLoading\" is set\n\n        const loadingItems = isLoading ?\n            [0, 1, 2, 3, 4, 5].map(idx =>\n                <Grid key={'placeholder-' + idx} item xs={12} sm={6} md={4}>\n                    <BeersListItemPlaceholder/>\n                </Grid>) :\n            undefined;\n\n        // Build search form if not in favourites view\n\n        const searchForm = showFavourites ? undefined :\n            <Box marginBottom={6}>\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        id=\"name-search\"\n                        placeholder=\"Search for a beer by name...\"\n                        fullWidth\n                        value={this.state.query}\n                        onChange={this.handleSearchInputChange}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\"><SearchRounded/></InputAdornment>,\n                        }}\n                    />\n                </form>\n            </Box>;\n\n        // Display \"no items found\" message if after loading there are no items in \"beers\" array\n        const noItemsFound = !(beers.length || isLoading) ?\n            <Typography variant={'subtitle1'}>No matching beers were found.</Typography> : undefined;\n\n        return (\n            <div>\n                {breadcrumbs}\n                <Box marginBottom={4} marginLeft={2}>\n                    <Typography variant={'h1'}>{showFavourites ? 'My Favourite Beers' : 'All Beers'}</Typography>\n                </Box>\n                {showFavourites && !InMemoryStore.getFavourites().length ?\n                    <Box marginLeft={2}><Link to={'/'}>Add some favourite beers</Link></Box> :\n                    <div>\n                        {searchForm}\n                        {noItemsFound}\n                        <Grid container spacing={2}>\n                            {beers.map((beer: Beer) =>\n                                <Grid key={beer.id} item xs={12} sm={6} md={4}>\n                                    <BeersListItem model={beer}\n                                                   onFavouriteToggled={showFavourites ? () => this.removeBeer(beer.id) : undefined}/>\n                                </Grid>\n                            )}\n                            {loadingItems}\n                        </Grid>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default BeersList;","import React from 'react';\nimport {\n    Box,\n    Card,\n    CardContent,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles\n} from '@material-ui/core';\nimport './Placeholder.scss';\nimport EmojiFoodBeverageIcon from '@material-ui/icons/EmojiFoodBeverage';\nimport {beerDetailStyles} from './BeerDetail';\n\nconst BeerDetailPlaceholder: React.FC = () => {\n\n    const useStyles = makeStyles(beerDetailStyles);\n    const classes = useStyles();\n\n    return (\n            <Card className={classes.root}>\n                <CardContent>\n                    <Box display=\"flex\" flexDirection={{xs: 'column', md: 'row'}} p={4}>\n                        <Box alignSelf=\"center\" marginBottom={{xs: 6, md: 0}} className={`${classes.cardMedia} placeholder`}/>\n                        <Box marginLeft={{md: 8, lg: 12}} flexGrow={1}>\n                            <Box marginBottom={2} marginX={{xs: 'auto', md: 0}} className=\"h3 placeholder\"/>\n                            <Box marginBottom={6} marginX={{xs: 'auto', md: 0}} className=\"h6 placeholder\"/>\n                            <Box marginBottom={4} className=\"subtitle1 multi-line-xs placeholder\"/>\n                            <Box marginBottom={4}>\n                                <List className={classes.list}>\n                                    <ListItem><ListItemText><Box className=\"list-item-text placeholder\"/></ListItemText></ListItem>\n                                    <ListItem><ListItemText><Box className=\"list-item-text placeholder\"/></ListItemText></ListItem>\n                                    <ListItem><ListItemText><Box className=\"list-item-text placeholder\"/></ListItemText></ListItem>\n                                    <ListItem><ListItemText><Box className=\"list-item-text placeholder\"/></ListItemText></ListItem>\n                                </List>\n                            </Box>\n                            <Box marginBottom={2}>\n                                <Box marginBottom={2} className=\"subtitle2 placeholder\"/>\n                                <List className=\"beer-details-list\">\n                                    <ListItem>\n                                        <ListItemIcon><EmojiFoodBeverageIcon className=\"placeholder-icon\"/></ListItemIcon>\n                                        <ListItemText><Box className=\"list-item-text placeholder\"/></ListItemText>\n                                    </ListItem>\n                                    <ListItem>\n                                        <ListItemIcon><EmojiFoodBeverageIcon className=\"placeholder-icon\"/></ListItemIcon>\n                                        <ListItemText><Box className=\"list-item-text placeholder\"/></ListItemText>\n                                    </ListItem>\n                                </List>\n                            </Box>\n                            <Box margin={4} marginX={'auto'} className=\"h6 placeholder multi-line-xs\"/>\n                        </Box>\n                    </Box>\n                </CardContent>\n            </Card>\n    );\n};\n\nexport default BeerDetailPlaceholder;","import React from 'react';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CardMedia, createStyles,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText, Theme,\n    Typography, withStyles, WithStyles\n} from '@material-ui/core';\nimport {Beer} from '../api/models/Beer';\nimport {Link, RouteComponentProps} from 'react-router-dom';\nimport EmojiFoodBeverageIcon from '@material-ui/icons/EmojiFoodBeverage';\nimport BeerDetailPlaceholder from './BeerDetailPlaceholder';\nimport ErrorMessage from './ErrorMessage';\nimport FavouriteToggle from './FavouriteToggle';\nimport InMemoryStore from '../services/InMemoryStore';\nimport BeerService from '../api/services/BeerService';\nimport {HttpError} from '../api/services/ErrorService';\nimport Breadcrumbs, {Breadcrumb} from './Breadcrumbs';\n\nexport const beerDetailStyles = (theme: Theme) => createStyles({\n    root: {\n        marginBottom: theme.spacing(2)\n    },\n    cardMedia: {\n        height: '300px',\n        width: '150px',\n        backgroundSize: 'contain'\n    },\n    list: {\n        '& li': {\n            padding: 0\n        }\n    }\n});\n\ninterface BeerDetailRouterProps {\n    id: string\n}\n\ninterface BeerDetailProps extends RouteComponentProps<BeerDetailRouterProps>, WithStyles<typeof beerDetailStyles> {\n}\n\ninterface BeerDetailState {\n    model?: Beer\n    error?: string | any[]\n    isFavourite: boolean\n}\n\nconst BeerDetail = withStyles(beerDetailStyles)(class extends React.Component<BeerDetailProps, BeerDetailState> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            model: undefined,\n            isFavourite: false\n        };\n    }\n\n    async componentDidMount(): Promise<void> {\n        // Retrieve \"id\" from route params\n        const {id} = this.props.match.params;\n\n        // Fetch beer by its id and whether it is a favourite from InMemoryStore, and update state or set error\n        try {\n            const beer = await BeerService.findById(+id);\n            const isFavourite = InMemoryStore.getIsFavourite((+id));\n\n            this.setState((state: BeerDetailState) => ({...state, model: beer, isFavourite}));\n\n        } catch (err) {\n            this.setErrorState(err);\n        }\n    }\n\n    setErrorState(err: Error) {\n\n        let message: string | (string | JSX.Element)[] = 'Oops, something went wrong! Failed to load beer.';\n\n        // Display \"not found\" message on both 400 and 404 status codes as unknown id in params returns 400 status\n        if (err instanceof HttpError && err.statusCode && [400, 404].indexOf(err.statusCode) > -1) {\n            message = ['The beer you requested does not exist. ', <Link to={'/'}>Find another beer.</Link>];\n        }\n\n        this.setState((state: BeerDetailState) => ({\n            ...state,\n            error: message\n        }));\n    }\n\n    handleClick() {\n        const {isFavourite, model} = this.state;\n        if (!model) return;\n\n        // Add or remove this beer's id from the InMemoryStore\n        const {id} = model;\n        isFavourite ? InMemoryStore.removeFavourite(id) : InMemoryStore.addFavourite(id);\n\n        // Update component's state to reflect changes\n        this.setState((state: BeerDetailState) => ({...state, isFavourite: !isFavourite}));\n    }\n\n    generateBreadcrumbs(): Breadcrumb[] {\n        const breadcrumbs = [{path: '/', title: 'Home'}];\n        const {model} = this.state;\n        const {id} = this.props.match.params;\n        const path = `/beers/${id}`;\n\n        // Set current breadcrumb as either this beer's id or it's name if the model has loaded\n        if (model) {\n            breadcrumbs.push({path, title: model.name});\n        } else {\n            breadcrumbs.push({path, title: id});\n        }\n\n        return breadcrumbs;\n    }\n\n    render() {\n\n        const {error, model, isFavourite} = this.state;\n        const {classes} = this.props;\n\n        const breadcrumbs = <Breadcrumbs breadcrumbs={this.generateBreadcrumbs()}/>;\n\n        // Display error message if \"error\" is set\n        if (error) return <div>{breadcrumbs}<ErrorMessage message={error}/></div>\n\n        // Display placeholder if \"model\" has not been set\n        if (!model) return <div>{breadcrumbs}<BeerDetailPlaceholder/></div>;\n\n        const {\n            name,\n            imageUrl,\n            tagline,\n            firstBrewed,\n            abv,\n            ibu,\n            description,\n            volume,\n            foodPairing,\n            brewersTips\n        } = model;\n\n        return (\n            <div className={classes.root}>\n                {breadcrumbs}\n                <Card>\n                    <CardContent>\n                        <Box display=\"flex\" flexDirection={{xs: 'column', md: 'row'}} p={4}>\n                            <Box alignSelf=\"center\" marginBottom={{xs: 6, md: 0}}>\n                                <CardMedia image={imageUrl} title={name} className={classes.cardMedia}/>\n                            </Box>\n                            <Box marginLeft={{md: 8, lg: 12}}>\n                                <Box marginBottom={2} display=\"flex\" flexDirection=\"row\"\n                                     justifyContent={{xs: 'center', md: 'left'}}>\n                                    <Typography variant={'h1'}>{name}</Typography>\n                                    <FavouriteToggle onClick={this.handleClick.bind(this)}\n                                                     isFavourite={isFavourite}/>\n                                </Box>\n                                <Box marginBottom={6} textAlign={{xs: 'center', md: 'left'}}><Typography\n                                    variant={'h5'}>{tagline}</Typography></Box>\n                                <Box marginBottom={4}><Typography\n                                    variant={'subtitle1'}>{description}</Typography></Box>\n                                <Box marginBottom={4}>\n                                    <List className={classes.list} aria-label={`${name} details list`}>\n                                        <ListItem>\n                                            <ListItemText>First brewed: <strong>{firstBrewed}</strong></ListItemText>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText>ABV: <strong>{abv}</strong></ListItemText>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText>IBU: <strong>{ibu}</strong></ListItemText>\n                                        </ListItem>\n                                        <ListItem>\n                                            <ListItemText>Volume: <strong>{volume.value} {volume.unit}</strong></ListItemText>\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                                <Box marginBottom={2}>\n                                    <Box marginBottom={2}>\n                                        <Typography variant={'subtitle1'}>Suggested food pairings:</Typography>\n                                    </Box>\n                                    <List className={classes.list} aria-label={`${name} food pairings list`}>\n                                        {foodPairing.map((item, idx) =>\n                                            <ListItem key={idx}>\n                                                <ListItemIcon><EmojiFoodBeverageIcon/></ListItemIcon>\n                                                <ListItemText>{item}</ListItemText>\n                                            </ListItem>\n                                        )}\n                                    </List>\n                                </Box>\n                                <Box padding={4} textAlign=\"center\">\n                                    <Typography variant={'subtitle1'}><em>\"{brewersTips}\"</em></Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n});\n\nexport default BeerDetail;","import React from 'react';\nimport NavBar from './components/NavBar';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Container, createMuiTheme, makeStyles} from '@material-ui/core';\nimport {blue, red} from '@material-ui/core/colors';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport BeersList from './components/BeersList';\nimport BeerDetail from './components/BeerDetail';\nimport ErrorMessage from './components/ErrorMessage';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: red,\n    },\n    spacing: 6,\n    typography: {\n        h1: {fontSize: '3rem'},\n        h2: {fontSize: '2.5rem'},\n        h3: {fontSize: '2rem'},\n        h4: {fontSize: '1.75rem'},\n        h5: {fontSize: '1.5rem'},\n        h6: {fontSize: '1.25rem'},\n        subtitle1: {fontSize: '1rem'},\n        subtitle2: {fontSize: '1rem', fontWeight: 'bold'},\n    }\n});\n\nconst App: React.FC = () => {\n\n    const useStyles = makeStyles({\n        container: {\n            marginTop: theme.spacing(5),\n        },\n    });\n    const classes = useStyles();\n\n    // Set basename on Router for github pages to handle route-prefixing\n    const basename = process.env.PUBLIC_URL || '/';\n\n    return (\n        <Router basename={basename}>\n            <ThemeProvider theme={theme}>\n                <NavBar/>\n                    <Container className={classes.container}>\n                        <Switch>\n                            <Route path={'/'} exact component={BeersList}/>\n                            <Route path={'/beers/:id'} component={BeerDetail}/>\n                            <Route path={'/favourites'}><BeersList showFavourites={true}/></Route>\n                            {/* Default route */}\n                            <Route><ErrorMessage message={'Oops! Page not found.'}/></Route>\n                        </Switch>\n                    </Container>\n            </ThemeProvider>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// add support for ie9 and above\nimport 'react-app-polyfill/ie9';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}